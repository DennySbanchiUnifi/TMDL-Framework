Model SAN-T

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package sant <http://www.modelspartiti.org/templates/san/sant>

  Class SANT -> TemplateModel
    Attribute name : EString<<1..1>>
    Reference parameters : Parameter<<0..*>>
    Reference places : Place<<1..*>>
    Reference activities : Activity<<0..*>>
    Reference globalVariables : GlobalVariable<<0..*>>
    Reference arcs : Arc<<0..*>>
    Reference gates : Gate<<0..*>>
    Reference initialization : Expression<<0..*>>

  Class NamedElement
    Attribute name : EString<<1..1>>
    Operation hasVariability() : EBoolean<<1..1>>

  Class Place -> NamedElement
    Reference multiplicity : Multiplicity<<1..1>>

  Class NormalPlace -> Place
    Reference marking : MarkingSimple<<1..1>>

  Class ExtendedPlace -> Place
    Reference marking : MarkingExtended<<1..1>>
    Attribute type : ExtendedPlaceType<<1..1>>

  Class Activity -> NamedElement
    Reference cases : CasesSpecification<<1..1>>

  Class CasesSpecification

  Class Case
    Reference ID : TemplateExpressionInteger<<1..1>>
    Reference p : Expression<<1..1>>

  Class CasesSpecificationCases -> CasesSpecification
    Reference cases : Case<<1..*>>

  Class CasesSpecificationProbabilityArray -> CasesSpecification
    Reference pValues : ParameterArray<<1..1>>

  Class CasesSpecificationParametric -> CasesSpecification
    Reference numCases : TemplateExpressionInteger<<1..1>>
    Reference pExpression : TemplateExpressionReal<<1..1>>

  Class Arc

  Class InputArc -> Arc
    Reference source : Place<<1..1>>
    Reference target : Activity<<1..1>>

  Class OutputArc -> Arc
    Reference source : Case<<1..1>>
    Reference target : Place<<1..1>>

  Class Gate -> NamedElement
    Reference function : Expression<<1..1>>
    Reference places : Place<<0..*>>

  Class OutputGate -> Gate

  Class OutputGateConcrete -> OutputGate
    Reference activityCase : Case<<1..1>>

  Class OutputGateTemplate -> OutputGate
    Reference activity : Activity<<1..1>>

  Class InputGate -> Gate
    Reference predicate : Expression<<1..1>>
    Reference activity : Activity<<1..1>>

  Class InstantaneousActivity -> Activity

  Class TimedActivity -> Activity
    Reference timeDistribution : Distribution<<1..1>>
    Reference activation : Expression
    Reference reactivation : Expression

  Class Distribution

  Class Expression
    Reference segments : ExpressionSegment<<1..*>>

  Class ExpressionSegment

  Class ExpressionText -> ExpressionSegment
    Attribute text : CodeFragment<<1..1>>

  Class ExpressionMarking -> ExpressionSegment
    Reference place : Place<<1..1>>
    Reference index : TemplateExpressionInteger<<1..1>>

  Class ExpressionVariable -> ExpressionSegment
    Reference variable : GlobalVariable<<1..1>>

  Class ExpressionTemplateExpression -> ExpressionSegment
    Reference exp : TemplateExpression<<1..1>>

  Class ExpressionIterationElement -> ExpressionSegment
    Reference iterator : VariabilityIterator<<1..1>>
    Attribute i : EInt<<1..1>>

  Class ExpressionActivityCasesNumber -> ExpressionSegment, TemplateExpressionInteger
    Reference activity : Activity<<1..1>>

  Class ExpressionPlaceTemplateSize -> ExpressionSegment, TemplateExpressionInteger
    Reference place : Place<<1..1>>

  Class ExpressionIfThenElse -> ExpressionSegment
    Reference condition : TemplateExpressionBoolean<<1..1>>
    Reference ifTrue : ExpressionSegment<<1..1>>
    Reference ifFalse : ExpressionSegment

  Class ExpressionLoop -> ExpressionSegment
    Reference begin : TemplateExpressionInteger<<1..1>>
    Reference end : TemplateExpressionInteger<<1..1>>
    Reference do : ExpressionSegment<<1..*>>

  Class VariabilityIterator

  Class ThisContextIterator -> VariabilityIterator

  Class LoopIterator -> VariabilityIterator
    Reference loop : ExpressionLoop<<1..1>>

  Class Marking

  Class MarkingInteger -> MarkingSimple
    Reference value : TemplateExpressionInteger<<1..1>>

  Class MarkingExtended -> Marking

  Class GlobalVariable -> NamedElement
    Attribute type : VariableType<<1..1>>

  Class MarkingVariableSimple -> MarkingSimple
    Reference variable : GlobalVariable<<1..1>>

  Class Exponential -> Distribution
    Reference rate : Expression<<1..1>>

  Class Normal -> Distribution
    Reference mean : Expression<<1..1>>
    Reference variance : Expression<<1..1>>

  Class Gamma -> Distribution
    Reference alpha : Expression<<1..1>>
    Reference beta : Expression<<1..1>>

  Class Binomial -> Distribution
    Reference t : Expression<<1..1>>
    Reference p : Expression<<1..1>>

  Class Deterministic -> Distribution
    Reference value : Expression<<1..1>>

  Class Lognormal -> Distribution
    Reference mu : Expression<<1..1>>
    Reference alphaSquared : Expression<<1..1>>

  Class Beta -> Distribution
    Reference alpha1 : Expression<<1..1>>
    Reference beta1 : Expression<<1..1>>

  Class NegativeBinomial -> Distribution
    Reference s : Expression<<1..1>>
    Reference p : Expression<<1..1>>

  Class Geometric -> Distribution
    Reference p : Expression<<1..1>>

  Class Erlang -> Distribution
    Reference m : Expression<<1..1>>
    Reference beta : Expression<<1..1>>

  Class Uniform -> Distribution
    Reference lowerBound : Expression<<1..1>>
    Reference upperBound : Expression<<1..1>>

  Class HyperExponential -> Distribution
    Reference rate0 : Expression<<1..1>>
    Reference p0 : Expression<<1..1>>

  Class Weibull -> Distribution
    Reference alpha : Expression<<1..1>>
    Reference beta : Expression<<1..1>>

  Class Triangular -> Distribution
    Reference min : Expression<<1..1>>
    Reference middle : Expression<<1..1>>
    Reference max : Expression<<1..1>>

  Class ConditionalWeibull -> Distribution
    Reference alpha : Expression<<1..1>>
    Reference beta : Expression<<1..1>>
    Reference t : Expression<<1..1>>

  Class HypoExponential -> Distribution
    Reference rate0 : Expression<<1..1>>

  Class Pareto -> Distribution
    Reference lowerBound : Expression<<1..1>>
    Reference shape : Expression<<1..1>>

  Class MarkingSimple -> Marking

  Class MarkingString -> MarkingExtended
    Attribute value : EString<<1..1>>

  Class MarkingVariableExtended -> MarkingExtended
    Reference variable : GlobalVariable<<1..1>>

  Enum VariableType
    Literal short = 0
    Literal int = 1
    Literal long = 2
    Literal float = 3
    Literal double = 4
    Literal bool = 5
    Literal char = 6

  Enum ExtendedPlaceType
    Literal int = 1
    Literal short = 0
    Literal float = 3
    Literal double = 4
    Literal char = 6

  DataType CodeFragment <java.lang.String>
